<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="cmeineditor" nsURI="http://cinco.scce.info/product/cmeineditor" nsPrefix="cmeineditor">
  <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
    <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
    <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
    <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="CMeinEditor">
    <eSuperTypes href="http://cinco.scce.info/graphicalgraphmodel#//CGraphModel"/>
    <eOperations name="update">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.dt.IDiagramTypeProvider dtp = org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createDiagramTypeProvider(&quot;grafikeditor.MeinEditorDiagramTypeProvider&quot;);&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider fp = (grafikeditor.graphiti.MeinEditorFeatureProvider) dtp.getFeatureProvider();&#xA;&#xA;org.eclipse.graphiti.features.context.impl.UpdateContext uc = new org.eclipse.graphiti.features.context.impl.UpdateContext(getDiagram());&#xA;org.eclipse.graphiti.features.IUpdateFeature uf = fp.getUpdateFeature(uc);&#xA;if (uf.canUpdate(uc))&#xA;&#x9;uf.update(uc);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getModelName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return ((grafikeditor.meineditor.MeinEditor) this.getModelElement()).getModelName();"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Get the value of attribute modelName&#xA;&#xA;@return Value of modelName"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="setModelName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(modelElement.eResource().getResourceSet());&#xA;if (dom == null)&#xA;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(modelElement.eResource().getResourceSet());&#xA;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;&#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.MeinEditor) modelElement).setModelName(arg);&#xA;&#x9;&#x9;update();&#xA;&#x9;}&#xA;});&#xA;      "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Set the value of attribute modelName&#xA;&#xA;@param arg New value for modelName"/>
      </eAnnotations>
      <eParameters name="arg">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eParameters>
    </eOperations>
    <eOperations name="getCStarts" upperBound="-1" eType="//CStart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getCModelElements(CStart.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCEnds" upperBound="-1" eType="//CEnd">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getCModelElements(CEnd.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCTerminals" upperBound="-1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getCModelElements(CTerminal.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCVariables" upperBound="-1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getCModelElements(CVariable.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCGateways" upperBound="-1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getCModelElements(CGateway.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCTransitions" upperBound="-1" eType="//CTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getCModelElements(CTransition.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCLabeledTransitions" upperBound="-1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getCModelElements(CLabeledTransition.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllNodeTypes" upperBound="-1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;return new org.eclipse.emf.common.util.BasicEList&lt;Class&lt;?>>(java.util.Arrays.asList(grafikeditor.api.cmeineditor.CStart.class,grafikeditor.api.cmeineditor.CEnd.class,grafikeditor.api.cmeineditor.CTerminal.class,grafikeditor.api.cmeineditor.CVariable.class,grafikeditor.api.cmeineditor.CGateway.class));"/>
      </eAnnotations>
      <eGenericType>
        <eTypeArguments/>
        <eClassifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaClass"/>
      </eGenericType>
    </eOperations>
    <eOperations name="newCStart" lowerBound="1" eType="//CStart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CStart retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCStart();&#xA;   &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;    &#xA;final grafikeditor.graphiti.features.create.nodes.CreateStartFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateStartFeature(provider);&#xA;final org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setX(x);&#xA;cc.setY(y);&#xA;if (width > -1 &amp;&amp; height > -1) {&#xA;&#x9;cc.setWidth(width);&#xA;&#x9;cc.setHeight(height);&#xA;}&#xA;cc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) getPictogramElement());&#xA;&#x9;if (cf.canCreate(cc, true)) {&#xA;&#x9;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;      &#x9;if (dom == null)&#xA;&#x9;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;Object[] newObject = cf.create(cc);&#xA;&#x9;&#x9;&#x9;if (newObject.length == 1 &amp;&amp; newObject[0] instanceof grafikeditor.meineditor.Start) {&#xA;&#x9;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Node) newObject[0]);&#xA;&#x9;&#x9;&#x9;&#x9;retval.setPictogramElement((org.eclipse.graphiti.mm.pictograms.ContainerShape) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;org.eclipse.graphiti.services.Graphiti.getLinkService().getPictogramElements(getDiagram(), retval.getModelElement()).get(0));&#xA;&#x9;&#x9;&#x9;&#x9;getModelElements().add(retval);&#xA;&#x9;&#x9;&#x9;&#x9;getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;&#x9;&#x9;&#x9;&#x9;getMap().put(retval.getModelElement() ,retval);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;} else {&#xA;&#x9;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + this.getModelElement()+&quot;' exceeded. Can not create Start in the specified container&quot;);&#xA;&#x9;}&#xA;    &#xA;return retval; "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates and adds an Start.&#xA;@param x The x position of Start's graphical representation in the diagram&#xA;@param y The y position of Start's graphical representation in the diagram&#xA;@param width The width position of Start's graphical representation in the diagram&#xA;@param height The height position of Start's graphical representation in the diagram&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes is reached&#xA;&#xA;@return New Start instance if create and add is possible, null otherwise."/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="width">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="height">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="newCStart" lowerBound="1" eType="//CStart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return newCStart(x, y, -1, -1);"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates and adds a new instance of Start if possible.&#xA;@param x The x position of Start's graphical representation in the diagram.&#xA;@param y The y position of Start's graphical representation in the diagram.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes is reached&#xA;&#xA;@return New Start instance if create and add is possible, null otherwise."/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="canNewCStart" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CStart retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCStart();&#xA;   &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;    &#xA;final grafikeditor.graphiti.features.create.nodes.CreateStartFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateStartFeature(provider);&#xA;final org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) getPictogramElement());&#xA;return cf.canCreate(cc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="newCEnd" lowerBound="1" eType="//CEnd">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CEnd retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCEnd();&#xA;   &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;    &#xA;final grafikeditor.graphiti.features.create.nodes.CreateEndFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateEndFeature(provider);&#xA;final org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setX(x);&#xA;cc.setY(y);&#xA;if (width > -1 &amp;&amp; height > -1) {&#xA;&#x9;cc.setWidth(width);&#xA;&#x9;cc.setHeight(height);&#xA;}&#xA;cc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) getPictogramElement());&#xA;&#x9;if (cf.canCreate(cc, true)) {&#xA;&#x9;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;      &#x9;if (dom == null)&#xA;&#x9;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;Object[] newObject = cf.create(cc);&#xA;&#x9;&#x9;&#x9;if (newObject.length == 1 &amp;&amp; newObject[0] instanceof grafikeditor.meineditor.End) {&#xA;&#x9;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Node) newObject[0]);&#xA;&#x9;&#x9;&#x9;&#x9;retval.setPictogramElement((org.eclipse.graphiti.mm.pictograms.ContainerShape) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;org.eclipse.graphiti.services.Graphiti.getLinkService().getPictogramElements(getDiagram(), retval.getModelElement()).get(0));&#xA;&#x9;&#x9;&#x9;&#x9;getModelElements().add(retval);&#xA;&#x9;&#x9;&#x9;&#x9;getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;&#x9;&#x9;&#x9;&#x9;getMap().put(retval.getModelElement() ,retval);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;} else {&#xA;&#x9;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + this.getModelElement()+&quot;' exceeded. Can not create End in the specified container&quot;);&#xA;&#x9;}&#xA;    &#xA;return retval; "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates and adds an End.&#xA;@param x The x position of End's graphical representation in the diagram&#xA;@param y The y position of End's graphical representation in the diagram&#xA;@param width The width position of End's graphical representation in the diagram&#xA;@param height The height position of End's graphical representation in the diagram&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes is reached&#xA;&#xA;@return New End instance if create and add is possible, null otherwise."/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="width">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="height">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="newCEnd" lowerBound="1" eType="//CEnd">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return newCEnd(x, y, -1, -1);"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates and adds a new instance of End if possible.&#xA;@param x The x position of End's graphical representation in the diagram.&#xA;@param y The y position of End's graphical representation in the diagram.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes is reached&#xA;&#xA;@return New End instance if create and add is possible, null otherwise."/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="canNewCEnd" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CEnd retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCEnd();&#xA;   &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;    &#xA;final grafikeditor.graphiti.features.create.nodes.CreateEndFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateEndFeature(provider);&#xA;final org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) getPictogramElement());&#xA;return cf.canCreate(cc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="newCTerminal" lowerBound="1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CTerminal retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCTerminal();&#xA;   &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;    &#xA;final grafikeditor.graphiti.features.create.nodes.CreateTerminalFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateTerminalFeature(provider);&#xA;final org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setX(x);&#xA;cc.setY(y);&#xA;if (width > -1 &amp;&amp; height > -1) {&#xA;&#x9;cc.setWidth(width);&#xA;&#x9;cc.setHeight(height);&#xA;}&#xA;cc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) getPictogramElement());&#xA;&#x9;if (cf.canCreate(cc, true)) {&#xA;&#x9;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;      &#x9;if (dom == null)&#xA;&#x9;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;Object[] newObject = cf.create(cc);&#xA;&#x9;&#x9;&#x9;if (newObject.length == 1 &amp;&amp; newObject[0] instanceof grafikeditor.meineditor.Terminal) {&#xA;&#x9;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Node) newObject[0]);&#xA;&#x9;&#x9;&#x9;&#x9;retval.setPictogramElement((org.eclipse.graphiti.mm.pictograms.ContainerShape) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;org.eclipse.graphiti.services.Graphiti.getLinkService().getPictogramElements(getDiagram(), retval.getModelElement()).get(0));&#xA;&#x9;&#x9;&#x9;&#x9;getModelElements().add(retval);&#xA;&#x9;&#x9;&#x9;&#x9;getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;&#x9;&#x9;&#x9;&#x9;getMap().put(retval.getModelElement() ,retval);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;} else {&#xA;&#x9;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + this.getModelElement()+&quot;' exceeded. Can not create Terminal in the specified container&quot;);&#xA;&#x9;}&#xA;    &#xA;return retval; "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates and adds an Terminal.&#xA;@param x The x position of Terminal's graphical representation in the diagram&#xA;@param y The y position of Terminal's graphical representation in the diagram&#xA;@param width The width position of Terminal's graphical representation in the diagram&#xA;@param height The height position of Terminal's graphical representation in the diagram&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes is reached&#xA;&#xA;@return New Terminal instance if create and add is possible, null otherwise."/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="width">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="height">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="newCTerminal" lowerBound="1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return newCTerminal(x, y, -1, -1);"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates and adds a new instance of Terminal if possible.&#xA;@param x The x position of Terminal's graphical representation in the diagram.&#xA;@param y The y position of Terminal's graphical representation in the diagram.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes is reached&#xA;&#xA;@return New Terminal instance if create and add is possible, null otherwise."/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="canNewCTerminal" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CTerminal retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCTerminal();&#xA;   &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;    &#xA;final grafikeditor.graphiti.features.create.nodes.CreateTerminalFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateTerminalFeature(provider);&#xA;final org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) getPictogramElement());&#xA;return cf.canCreate(cc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="newCVariable" lowerBound="1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CVariable retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCVariable();&#xA;   &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;    &#xA;final grafikeditor.graphiti.features.create.nodes.CreateVariableFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateVariableFeature(provider);&#xA;final org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setX(x);&#xA;cc.setY(y);&#xA;if (width > -1 &amp;&amp; height > -1) {&#xA;&#x9;cc.setWidth(width);&#xA;&#x9;cc.setHeight(height);&#xA;}&#xA;cc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) getPictogramElement());&#xA;&#x9;if (cf.canCreate(cc, true)) {&#xA;&#x9;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;      &#x9;if (dom == null)&#xA;&#x9;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;Object[] newObject = cf.create(cc);&#xA;&#x9;&#x9;&#x9;if (newObject.length == 1 &amp;&amp; newObject[0] instanceof grafikeditor.meineditor.Variable) {&#xA;&#x9;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Node) newObject[0]);&#xA;&#x9;&#x9;&#x9;&#x9;retval.setPictogramElement((org.eclipse.graphiti.mm.pictograms.ContainerShape) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;org.eclipse.graphiti.services.Graphiti.getLinkService().getPictogramElements(getDiagram(), retval.getModelElement()).get(0));&#xA;&#x9;&#x9;&#x9;&#x9;getModelElements().add(retval);&#xA;&#x9;&#x9;&#x9;&#x9;getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;&#x9;&#x9;&#x9;&#x9;getMap().put(retval.getModelElement() ,retval);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;} else {&#xA;&#x9;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + this.getModelElement()+&quot;' exceeded. Can not create Variable in the specified container&quot;);&#xA;&#x9;}&#xA;    &#xA;return retval; "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates and adds an Variable.&#xA;@param x The x position of Variable's graphical representation in the diagram&#xA;@param y The y position of Variable's graphical representation in the diagram&#xA;@param width The width position of Variable's graphical representation in the diagram&#xA;@param height The height position of Variable's graphical representation in the diagram&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes is reached&#xA;&#xA;@return New Variable instance if create and add is possible, null otherwise."/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="width">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="height">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="newCVariable" lowerBound="1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return newCVariable(x, y, -1, -1);"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates and adds a new instance of Variable if possible.&#xA;@param x The x position of Variable's graphical representation in the diagram.&#xA;@param y The y position of Variable's graphical representation in the diagram.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes is reached&#xA;&#xA;@return New Variable instance if create and add is possible, null otherwise."/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="canNewCVariable" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CVariable retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCVariable();&#xA;   &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;    &#xA;final grafikeditor.graphiti.features.create.nodes.CreateVariableFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateVariableFeature(provider);&#xA;final org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) getPictogramElement());&#xA;return cf.canCreate(cc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="newCGateway" lowerBound="1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CGateway retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCGateway();&#xA;   &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;    &#xA;final grafikeditor.graphiti.features.create.nodes.CreateGatewayFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateGatewayFeature(provider);&#xA;final org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setX(x);&#xA;cc.setY(y);&#xA;if (width > -1 &amp;&amp; height > -1) {&#xA;&#x9;cc.setWidth(width);&#xA;&#x9;cc.setHeight(height);&#xA;}&#xA;cc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) getPictogramElement());&#xA;&#x9;if (cf.canCreate(cc, true)) {&#xA;&#x9;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;      &#x9;if (dom == null)&#xA;&#x9;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;Object[] newObject = cf.create(cc);&#xA;&#x9;&#x9;&#x9;if (newObject.length == 1 &amp;&amp; newObject[0] instanceof grafikeditor.meineditor.Gateway) {&#xA;&#x9;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Node) newObject[0]);&#xA;&#x9;&#x9;&#x9;&#x9;retval.setPictogramElement((org.eclipse.graphiti.mm.pictograms.ContainerShape) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;org.eclipse.graphiti.services.Graphiti.getLinkService().getPictogramElements(getDiagram(), retval.getModelElement()).get(0));&#xA;&#x9;&#x9;&#x9;&#x9;getModelElements().add(retval);&#xA;&#x9;&#x9;&#x9;&#x9;getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;&#x9;&#x9;&#x9;&#x9;getMap().put(retval.getModelElement() ,retval);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;} else {&#xA;&#x9;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + this.getModelElement()+&quot;' exceeded. Can not create Gateway in the specified container&quot;);&#xA;&#x9;}&#xA;    &#xA;return retval; "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates and adds an Gateway.&#xA;@param x The x position of Gateway's graphical representation in the diagram&#xA;@param y The y position of Gateway's graphical representation in the diagram&#xA;@param width The width position of Gateway's graphical representation in the diagram&#xA;@param height The height position of Gateway's graphical representation in the diagram&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes is reached&#xA;&#xA;@return New Gateway instance if create and add is possible, null otherwise."/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="width">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="height">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="newCGateway" lowerBound="1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return newCGateway(x, y, -1, -1);"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates and adds a new instance of Gateway if possible.&#xA;@param x The x position of Gateway's graphical representation in the diagram.&#xA;@param y The y position of Gateway's graphical representation in the diagram.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes is reached&#xA;&#xA;@return New Gateway instance if create and add is possible, null otherwise."/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="canNewCGateway" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CGateway retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCGateway();&#xA;   &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;    &#xA;final grafikeditor.graphiti.features.create.nodes.CreateGatewayFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateGatewayFeature(provider);&#xA;final org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) getPictogramElement());&#xA;return cf.canCreate(cc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="getCTransition" lowerBound="1" eType="//CTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CTransition retval = (CTransition) this.getMap().get(me);&#xA;if (retval != null &amp;&amp; retval.getContainer().equals(this))&#xA;&#x9;return retval;&#xA;return null;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the wrapped Transition for the specified model element&#xA;@param me The Transition for which the wrapped instance should be found&#xA;&#xA;@return The wrapped Transition"/>
      </eAnnotations>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="file:/Users/liyong/Desktop/cinco-0.7/cinco.app/Contents/MacOS/workspace/grafikeditor/src-gen/model/MeinEditor.ecore#//Transition"/>
      </eParameters>
    </eOperations>
    <eOperations name="getCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CLabeledTransition retval = (CLabeledTransition) this.getMap().get(me);&#xA;if (retval != null &amp;&amp; retval.getContainer().equals(this))&#xA;&#x9;return retval;&#xA;return null;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the wrapped LabeledTransition for the specified model element&#xA;@param me The LabeledTransition for which the wrapped instance should be found&#xA;&#xA;@return The wrapped LabeledTransition"/>
      </eAnnotations>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="file:/Users/liyong/Desktop/cinco-0.7/cinco.app/Contents/MacOS/workspace/grafikeditor/src-gen/model/MeinEditor.ecore#//LabeledTransition"/>
      </eParameters>
    </eOperations>
    <eOperations name="findCStart" lowerBound="1" eType="//CStart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CStart retval = (CStart) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CStart for a Start if it is contained somewhere in this graphmodel.&#xA;@param me The modelElement for which the wrapped element is searched&#xA;&#xA;@return The wrapped modelelement if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="file:/Users/liyong/Desktop/cinco-0.7/cinco.app/Contents/MacOS/workspace/grafikeditor/src-gen/model/MeinEditor.ecore#//Start"/>
      </eParameters>
    </eOperations>
    <eOperations name="findCEnd" lowerBound="1" eType="//CEnd">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CEnd retval = (CEnd) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CEnd for a End if it is contained somewhere in this graphmodel.&#xA;@param me The modelElement for which the wrapped element is searched&#xA;&#xA;@return The wrapped modelelement if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="file:/Users/liyong/Desktop/cinco-0.7/cinco.app/Contents/MacOS/workspace/grafikeditor/src-gen/model/MeinEditor.ecore#//End"/>
      </eParameters>
    </eOperations>
    <eOperations name="findCTerminal" lowerBound="1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CTerminal retval = (CTerminal) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CTerminal for a Terminal if it is contained somewhere in this graphmodel.&#xA;@param me The modelElement for which the wrapped element is searched&#xA;&#xA;@return The wrapped modelelement if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="file:/Users/liyong/Desktop/cinco-0.7/cinco.app/Contents/MacOS/workspace/grafikeditor/src-gen/model/MeinEditor.ecore#//Terminal"/>
      </eParameters>
    </eOperations>
    <eOperations name="findCVariable" lowerBound="1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CVariable retval = (CVariable) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CVariable for a Variable if it is contained somewhere in this graphmodel.&#xA;@param me The modelElement for which the wrapped element is searched&#xA;&#xA;@return The wrapped modelelement if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="file:/Users/liyong/Desktop/cinco-0.7/cinco.app/Contents/MacOS/workspace/grafikeditor/src-gen/model/MeinEditor.ecore#//Variable"/>
      </eParameters>
    </eOperations>
    <eOperations name="findCGateway" lowerBound="1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CGateway retval = (CGateway) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CGateway for a Gateway if it is contained somewhere in this graphmodel.&#xA;@param me The modelElement for which the wrapped element is searched&#xA;&#xA;@return The wrapped modelelement if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="file:/Users/liyong/Desktop/cinco-0.7/cinco.app/Contents/MacOS/workspace/grafikeditor/src-gen/model/MeinEditor.ecore#//Gateway"/>
      </eParameters>
    </eOperations>
    <eOperations name="findCTransition" lowerBound="1" eType="//CTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CTransition retval = (CTransition) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CTransition for a Transition if it is contained somewhere in this graphmodel.&#xA;@param me The modelElement for which the wrapped element is searched&#xA;&#xA;@return The wrapped modelelement if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="file:/Users/liyong/Desktop/cinco-0.7/cinco.app/Contents/MacOS/workspace/grafikeditor/src-gen/model/MeinEditor.ecore#//Transition"/>
      </eParameters>
    </eOperations>
    <eOperations name="findCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CLabeledTransition retval = (CLabeledTransition) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CLabeledTransition for a LabeledTransition if it is contained somewhere in this graphmodel.&#xA;@param me The modelElement for which the wrapped element is searched&#xA;&#xA;@return The wrapped modelelement if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="file:/Users/liyong/Desktop/cinco-0.7/cinco.app/Contents/MacOS/workspace/grafikeditor/src-gen/model/MeinEditor.ecore#//LabeledTransition"/>
      </eParameters>
    </eOperations>
    <eOperations name="getCRootElement" eType="//CMeinEditor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return this;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="findCModelElement" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CModelElement retval = (CModelElement) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CModelElement for a graphmodel.ModelElement if it is contained somewhere in this graphmodel.&#xA;@param me The graphmodel.ModelElement for which the wrapped element is searched&#xA;&#xA;@return The wrapped graphmodel.Modelelement if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eType xsi:type="ecore:EClass" href="http://cinco.scce.info/graphicalgraphmodel#//CModelElement"/>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="http://www.jabc.de/cinco/gdl/graphmodel#//ModelElement"/>
      </eParameters>
    </eOperations>
    <eOperations name="findCNode" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CNode retval = (CNode) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CNode for a graphmodel.Node if it is contained somewhere in this graphmodel.&#xA;@param me The graphmodel.Node for which the wrapped element is searched&#xA;&#xA;@return The wrapped node if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eType xsi:type="ecore:EClass" href="http://cinco.scce.info/graphicalgraphmodel#//CNode"/>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="http://www.jabc.de/cinco/gdl/graphmodel#//Node"/>
      </eParameters>
    </eOperations>
    <eOperations name="findCEdge" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CEdge retval = (CEdge) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CEdge for a graphmodel.Edge if it is contained somewhere in this graphmodel.&#xA;@param me The graphmodel.Edge for which the wrapped element is searched&#xA;&#xA;@return The wrapped modelelement if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eType xsi:type="ecore:EClass" href="http://cinco.scce.info/graphicalgraphmodel#//CEdge"/>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="http://www.jabc.de/cinco/gdl/graphmodel#//Edge"/>
      </eParameters>
    </eOperations>
    <eOperations name="findCModelElementContainer" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CModelElementContainer retval = (CModelElementContainer) this.getMap().get(me);&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Returns the CModelElementContainer for a graphmodel.ModelElementContainer if it is contained somewhere in this graphmodel.&#xA;@param me The graphmodel.ModelElementContainer for which the wrapped element is searched&#xA;&#xA;@return The wrapped modelelement if it is contained somewhere in the graphmodel."/>
      </eAnnotations>
      <eType xsi:type="ecore:EClass" href="http://cinco.scce.info/graphicalgraphmodel#//CModelElementContainer"/>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="http://www.jabc.de/cinco/gdl/graphmodel#//ModelElementContainer"/>
      </eParameters>
    </eOperations>
    <eOperations name="canDeleteModelElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, me.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;org.eclipse.graphiti.features.IDeleteFeature df = provider.getDeleteFeature(dc);&#xA;&#xA; return df.canDelete(dc);&#xA;&#xA;&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="platform:/plugin/de.jabc.cinco.meta.core.ge.style.model/model/GraphicalGraphModel.ecore#//CModelElement"/>
      </eParameters>
    </eOperations>
    <eOperations name="deleteModelElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, me.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;de.jabc.cinco.meta.core.ui.features.CincoDeleteFeature df = (de.jabc.cinco.meta.core.ui.features.CincoDeleteFeature) provider.getDeleteFeature(dc);&#xA;&#xA;if (this.getMap().get(me.getModelElement()) != null) {&#xA;&#x9;this.getMap().remove(me.getModelElement());&#xA;}&#xA;&#xA;if ( this.getCRootElement().getMap().get(me.getModelElement()) != null) {&#xA;&#x9;this.getCRootElement().getMap().remove(me.getModelElement());&#xA;}&#xA;&#xA;if (df.canDelete(dc, true)) {&#xA;&#x9;df.delete(dc);&#xA;&#x9;return true;&#xA;}&#xA;return false;&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Deletes the given modelElement from the MeinEditor and the diagram&#xA;@param me The modelElement to delete&#xA;@return true, if the modelElement was successfully removed, false otherwise"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="platform:/plugin/de.jabc.cinco.meta.core.ge.style.model/model/GraphicalGraphModel.ecore#//CModelElement"/>
      </eParameters>
    </eOperations>
    <eOperations name="highlight">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = new java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement>();&#xA;for (graphicalgraphmodel.CModelElement cme : elements) {&#xA;&#x9;pes.add(cme.getPictogramElement());&#xA;}&#xA;org.eclipse.graphiti.platform.IDiagramBehavior diagramBehavior = grafikeditor.graphiti.MeinEditorGraphitiUtils.getInstance().getDTP().getDiagramBehavior();&#xA;if (diagramBehavior instanceof org.eclipse.graphiti.ui.editor.DiagramBehavior) {&#xA;&#x9;org.eclipse.graphiti.ui.editor.DiagramBehavior db = (org.eclipse.graphiti.ui.editor.DiagramBehavior) diagramBehavior;&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement[] selected = diagramBehavior.getDiagramContainer().getSelectedPictogramElements();&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement[] select = pes.toArray(new org.eclipse.graphiti.mm.pictograms.PictogramElement[pes.size()]);&#xA;&#x9;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> lastSelected = new java.util.HashSet&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement>();&#xA;&#x9;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> toSelect = new java.util.HashSet&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement>();&#xA;&#x9;lastSelected.addAll(java.util.Arrays.asList(selected));&#xA;&#x9;toSelect.addAll(java.util.Arrays.asList(select));&#xA;&#x9;for (org.eclipse.graphiti.mm.pictograms.PictogramElement pe : select) {&#xA;&#x9;&#x9;if (!lastSelected.contains(pe)) {&#xA;&#x9;&#x9;&#x9;diagramBehavior.getDiagramContainer().selectPictogramElements(select);&#xA;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="elements" upperBound="-1">
        <eType xsi:type="ecore:EClass" href="platform:/plugin/de.jabc.cinco.meta.core.ge.style.model/model/GraphicalGraphModel.ecore#//CModelElement"/>
      </eParameters>
    </eOperations>
    <eOperations name="getCMeinEditor" lowerBound="1" eType="//CMeinEditor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="CMeinEditor retval = this;&#xA;return retval;"/>
      </eAnnotations>
      <eParameters name="me">
        <eType xsi:type="ecore:EClass" href="file:/Users/liyong/Desktop/cinco-0.7/cinco.app/Contents/MacOS/workspace/grafikeditor/src-gen/model/MeinEditor.ecore#//LabeledTransition"/>
      </eParameters>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CStart">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="checkOutgoingStartLabeledTransition0"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
      <details key="checkOutgoingStartLabeledTransition0" value="self.outgoing->select(elem: elem.oclIsTypeOf())->size()==1"/>
    </eAnnotations>
    <eSuperTypes href="http://cinco.scce.info/graphicalgraphmodel#//CNode"/>
    <eOperations name="update">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.dt.IDiagramTypeProvider dtp = org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createDiagramTypeProvider(&quot;grafikeditor.MeinEditorDiagramTypeProvider&quot;);&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider fp = (grafikeditor.graphiti.MeinEditorFeatureProvider) dtp.getFeatureProvider();&#xA;&#xA;org.eclipse.graphiti.features.context.impl.UpdateContext uc = new org.eclipse.graphiti.features.context.impl.UpdateContext(getPictogramElement());&#xA;org.eclipse.graphiti.features.IUpdateFeature uf = fp.getUpdateFeature(uc);&#xA;if (uf.canUpdate(uc))&#xA;&#x9;uf.update(uc);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return ((grafikeditor.meineditor.Start) this.getModelElement()).getName();"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Get the value of attribute name&#xA;&#xA;@return Value of name"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="setName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(modelElement.eResource().getResourceSet());&#xA;if (dom == null)&#xA;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(modelElement.eResource().getResourceSet());&#xA;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;&#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.Start) modelElement).setName(arg);&#xA;&#x9;&#x9;update();&#xA;&#x9;}&#xA;});&#xA;      "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Set the value of attribute name&#xA;&#xA;@param arg New value for name"/>
      </eAnnotations>
      <eParameters name="arg">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eParameters>
    </eOperations>
    <eOperations name="getEndSuccessors" upperBound="-1" eType="//CEnd">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CEnd.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getTerminalSuccessors" upperBound="-1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CTerminal.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getVariableSuccessors" upperBound="-1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CVariable.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getGatewaySuccessors" upperBound="-1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CGateway.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCRootElement" eType="//CMeinEditor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return (CMeinEditor)super.getCRootElement();"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="delete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final grafikeditor.graphiti.features.delete.DeleteStartFeature df = (grafikeditor.graphiti.features.delete.DeleteStartFeature) provider.getDeleteFeature(dc);&#xA;&#xA;if (this.getContainer().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getContainer().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if ( this.getCRootElement().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getCRootElement().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if (df.canDelete(dc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;df.delete(dc);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;&#x9;return true;&#xA;}&#xA;return false;&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Deletes this modelElement.&#xA;&#xA;@return true, if the modelElement was successfully removed, false otherwise"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="canDelete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final org.eclipse.graphiti.features.IDeleteFeature df = provider.getDeleteFeature(dc);&#xA;return df.canDelete(dc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="highlight">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;org.eclipse.graphiti.platform.IDiagramBehavior idb = grafikeditor.graphiti.MeinEditorGraphitiUtils.getInstance().getDTP().getDiagramBehavior();&#xA;if (idb instanceof org.eclipse.graphiti.ui.editor.DiagramBehavior) {&#xA;&#x9;org.eclipse.graphiti.ui.editor.DiagramBehavior db = (org.eclipse.graphiti.ui.editor.DiagramBehavior) idb;&#xA;&#x9;db.setPictogramElementForSelection(getPictogramElement());&#xA;&#x9;db.selectBufferedPictogramElements();&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="moveTo">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;if (pes != null &amp;&amp; !pes.isEmpty()) {&#xA;final org.eclipse.graphiti.features.context.impl.MoveShapeContext mc = new org.eclipse.graphiti.features.context.impl.MoveShapeContext((org.eclipse.graphiti.mm.pictograms.Shape)pes.get(0));&#xA;&#x9;mc.setLocation(x, y);&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CGraphModel)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CGraphModel) this.getContainer()).getPictogramElement());&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CContainer)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CContainer) this.getContainer()).getPictogramElement());&#xA;&#x9;mc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) container.getPictogramElement());&#xA;&#xA;&#x9;final grafikeditor.graphiti.features.move.MoveStartFeature mf = (grafikeditor.graphiti.features.move.MoveStartFeature) provider.getMoveShapeFeature(mc);&#xA;&#xA;&#x9;if (mf.canMoveShape(mc, true)) {&#xA;&#x9;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(container.getModelElement().eResource().getResourceSet());&#xA;&#x9;      &#x9;if (dom == null)&#xA;&#x9;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(container.getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;mf.moveShape(mc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;} else {&#xA;&#x9;&#x9;if (mf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + container.getModelElement() +&quot;' exceeded. Can not move Start in the specified container&quot;);&#xA;&#x9;}&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Moves this node to the specified container. The node is placed at (x,y). ATTENTION: Each container element has an own coordinate system!&#xA;@param container The target container&#xA;@param x The new x position&#xA;@param y The new y position&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes in the target container is reached"/>
      </eAnnotations>
      <eParameters name="container" eType="//CMeinEditor"/>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="canMoveTo">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;if (pes != null &amp;&amp; !pes.isEmpty()) {&#xA;&#x9;final org.eclipse.graphiti.features.context.impl.MoveShapeContext mc = new org.eclipse.graphiti.features.context.impl.MoveShapeContext((org.eclipse.graphiti.mm.pictograms.Shape)pes.get(0));&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CGraphModel)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CGraphModel) this.getContainer()).getPictogramElement());&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CContainer)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CContainer) this.getContainer()).getPictogramElement());&#xA;&#x9;mc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) container.getPictogramElement());&#xA;&#x9;final grafikeditor.graphiti.features.move.MoveStartFeature mf = (grafikeditor.graphiti.features.move.MoveStartFeature) provider.getMoveShapeFeature(mc);&#xA;&#xA;&#x9;return mf.canMoveShape(mc);&#xA;}&#xA;return false;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="container" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CStart clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCStart();&#xA;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.flatCopy(getPictogramElement());&#xA;clone.setPictogramElement(copy);&#xA;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) target.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;    &#xA;final org.eclipse.graphiti.features.context.impl.AddContext ac = new org.eclipse.graphiti.features.context.impl.AddContext();&#xA;ac.setNewObject(clone.getModelElement());&#xA;ac.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) target.getPictogramElement());&#xA;&#xA;grafikeditor.graphiti.features.create.nodes.CreateStartFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateStartFeature(provider);&#xA;org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer(target.getPictogramElement());&#xA;&#xA;final grafikeditor.graphiti.features.add.AddStartFeature af = (grafikeditor.graphiti.features.add.AddStartFeature) provider.getAddFeature(ac);&#xA;&#xA;return cf.canCreate(cc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="clone" eType="//CStart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CStart clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCStart();&#xA;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.flatCopy(getPictogramElement());&#xA;clone.setPictogramElement(copy);&#xA;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) target.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;    &#xA;final org.eclipse.graphiti.features.context.impl.AddContext ac = new org.eclipse.graphiti.features.context.impl.AddContext();&#xA;ac.setNewObject(clone.getModelElement());&#xA;ac.setLocation(clone.getX(), clone.getY());&#xA;ac.setWidth(clone.getWidth());&#xA;ac.setHeight(clone.getHeight());&#xA;ac.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) target.getPictogramElement());&#xA;&#xA;grafikeditor.graphiti.features.create.nodes.CreateStartFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateStartFeature(provider);&#xA;org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer(target.getPictogramElement());&#xA;&#xA;final grafikeditor.graphiti.features.add.AddStartFeature af = (grafikeditor.graphiti.features.add.AddStartFeature) provider.getAddFeature(ac);&#xA;if (af != null &amp;&amp; af.canAdd(ac) &amp;&amp; cf.canCreate(cc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(ac));&#xA;&#x9;&#x9;clone.setContainer(target);&#xA;&#x9;&#x9;target.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;target.getCRootElement().getModelElement().getModelElements().add(clone.getModelElement());&#xA;&#x9;&#x9;target.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;}  else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. Can not create '&quot; + this.getModelElement()+&quot;'' in the specified container&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates an clone (persisting the modelElement's id) of this modelElement"/>
      </eAnnotations>
      <eParameters name="target" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="resize">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) getCRootElement().getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ResizeShapeContext rc = new org.eclipse.graphiti.features.context.impl.ResizeShapeContext((org.eclipse.graphiti.mm.pictograms.Shape) getPictogramElement());&#xA;rc.setSize(width, height);&#xA;rc.setX(getX());&#xA;rc.setY(getY());&#xA;final grafikeditor.graphiti.features.resize.ResizeStartFeature rf = (grafikeditor.graphiti.features.resize.ResizeStartFeature) provider.getResizeShapeFeature((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc);&#xA;if (rf != null &amp;&amp; rf.canResizeShape((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;rf.resizeShape((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc);&#xA;&#x9;}&#xA;&#x9;});&#xA;}"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates an clone (persisting the modelElement's id) of this modelElement"/>
      </eAnnotations>
      <eParameters name="width">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="height">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CEnd">
    <eSuperTypes href="http://cinco.scce.info/graphicalgraphmodel#//CNode"/>
    <eOperations name="update">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.dt.IDiagramTypeProvider dtp = org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createDiagramTypeProvider(&quot;grafikeditor.MeinEditorDiagramTypeProvider&quot;);&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider fp = (grafikeditor.graphiti.MeinEditorFeatureProvider) dtp.getFeatureProvider();&#xA;&#xA;org.eclipse.graphiti.features.context.impl.UpdateContext uc = new org.eclipse.graphiti.features.context.impl.UpdateContext(getPictogramElement());&#xA;org.eclipse.graphiti.features.IUpdateFeature uf = fp.getUpdateFeature(uc);&#xA;if (uf.canUpdate(uc))&#xA;&#x9;uf.update(uc);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getStartPredecessors" upperBound="-1" eType="//CStart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CStart.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getGatewayPredecessors" upperBound="-1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CGateway.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getTerminalPredecessors" upperBound="-1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CTerminal.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getVariablePredecessors" upperBound="-1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CVariable.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCRootElement" eType="//CMeinEditor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return (CMeinEditor)super.getCRootElement();"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="delete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final grafikeditor.graphiti.features.delete.DeleteEndFeature df = (grafikeditor.graphiti.features.delete.DeleteEndFeature) provider.getDeleteFeature(dc);&#xA;&#xA;if (this.getContainer().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getContainer().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if ( this.getCRootElement().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getCRootElement().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if (df.canDelete(dc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;df.delete(dc);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;&#x9;return true;&#xA;}&#xA;return false;&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Deletes this modelElement.&#xA;&#xA;@return true, if the modelElement was successfully removed, false otherwise"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="canDelete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final org.eclipse.graphiti.features.IDeleteFeature df = provider.getDeleteFeature(dc);&#xA;return df.canDelete(dc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="highlight">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;org.eclipse.graphiti.platform.IDiagramBehavior idb = grafikeditor.graphiti.MeinEditorGraphitiUtils.getInstance().getDTP().getDiagramBehavior();&#xA;if (idb instanceof org.eclipse.graphiti.ui.editor.DiagramBehavior) {&#xA;&#x9;org.eclipse.graphiti.ui.editor.DiagramBehavior db = (org.eclipse.graphiti.ui.editor.DiagramBehavior) idb;&#xA;&#x9;db.setPictogramElementForSelection(getPictogramElement());&#xA;&#x9;db.selectBufferedPictogramElements();&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="moveTo">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;if (pes != null &amp;&amp; !pes.isEmpty()) {&#xA;final org.eclipse.graphiti.features.context.impl.MoveShapeContext mc = new org.eclipse.graphiti.features.context.impl.MoveShapeContext((org.eclipse.graphiti.mm.pictograms.Shape)pes.get(0));&#xA;&#x9;mc.setLocation(x, y);&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CGraphModel)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CGraphModel) this.getContainer()).getPictogramElement());&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CContainer)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CContainer) this.getContainer()).getPictogramElement());&#xA;&#x9;mc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) container.getPictogramElement());&#xA;&#xA;&#x9;final grafikeditor.graphiti.features.move.MoveEndFeature mf = (grafikeditor.graphiti.features.move.MoveEndFeature) provider.getMoveShapeFeature(mc);&#xA;&#xA;&#x9;if (mf.canMoveShape(mc, true)) {&#xA;&#x9;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(container.getModelElement().eResource().getResourceSet());&#xA;&#x9;      &#x9;if (dom == null)&#xA;&#x9;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(container.getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;mf.moveShape(mc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;} else {&#xA;&#x9;&#x9;if (mf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + container.getModelElement() +&quot;' exceeded. Can not move End in the specified container&quot;);&#xA;&#x9;}&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Moves this node to the specified container. The node is placed at (x,y). ATTENTION: Each container element has an own coordinate system!&#xA;@param container The target container&#xA;@param x The new x position&#xA;@param y The new y position&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes in the target container is reached"/>
      </eAnnotations>
      <eParameters name="container" eType="//CMeinEditor"/>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="canMoveTo">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;if (pes != null &amp;&amp; !pes.isEmpty()) {&#xA;&#x9;final org.eclipse.graphiti.features.context.impl.MoveShapeContext mc = new org.eclipse.graphiti.features.context.impl.MoveShapeContext((org.eclipse.graphiti.mm.pictograms.Shape)pes.get(0));&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CGraphModel)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CGraphModel) this.getContainer()).getPictogramElement());&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CContainer)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CContainer) this.getContainer()).getPictogramElement());&#xA;&#x9;mc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) container.getPictogramElement());&#xA;&#x9;final grafikeditor.graphiti.features.move.MoveEndFeature mf = (grafikeditor.graphiti.features.move.MoveEndFeature) provider.getMoveShapeFeature(mc);&#xA;&#xA;&#x9;return mf.canMoveShape(mc);&#xA;}&#xA;return false;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="container" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CEnd clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCEnd();&#xA;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.flatCopy(getPictogramElement());&#xA;clone.setPictogramElement(copy);&#xA;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) target.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;    &#xA;final org.eclipse.graphiti.features.context.impl.AddContext ac = new org.eclipse.graphiti.features.context.impl.AddContext();&#xA;ac.setNewObject(clone.getModelElement());&#xA;ac.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) target.getPictogramElement());&#xA;&#xA;grafikeditor.graphiti.features.create.nodes.CreateEndFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateEndFeature(provider);&#xA;org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer(target.getPictogramElement());&#xA;&#xA;final grafikeditor.graphiti.features.add.AddEndFeature af = (grafikeditor.graphiti.features.add.AddEndFeature) provider.getAddFeature(ac);&#xA;&#xA;return cf.canCreate(cc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="clone" eType="//CEnd">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CEnd clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCEnd();&#xA;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.flatCopy(getPictogramElement());&#xA;clone.setPictogramElement(copy);&#xA;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) target.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;    &#xA;final org.eclipse.graphiti.features.context.impl.AddContext ac = new org.eclipse.graphiti.features.context.impl.AddContext();&#xA;ac.setNewObject(clone.getModelElement());&#xA;ac.setLocation(clone.getX(), clone.getY());&#xA;ac.setWidth(clone.getWidth());&#xA;ac.setHeight(clone.getHeight());&#xA;ac.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) target.getPictogramElement());&#xA;&#xA;grafikeditor.graphiti.features.create.nodes.CreateEndFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateEndFeature(provider);&#xA;org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer(target.getPictogramElement());&#xA;&#xA;final grafikeditor.graphiti.features.add.AddEndFeature af = (grafikeditor.graphiti.features.add.AddEndFeature) provider.getAddFeature(ac);&#xA;if (af != null &amp;&amp; af.canAdd(ac) &amp;&amp; cf.canCreate(cc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(ac));&#xA;&#x9;&#x9;clone.setContainer(target);&#xA;&#x9;&#x9;target.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;target.getCRootElement().getModelElement().getModelElements().add(clone.getModelElement());&#xA;&#x9;&#x9;target.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;}  else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. Can not create '&quot; + this.getModelElement()+&quot;'' in the specified container&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates an clone (persisting the modelElement's id) of this modelElement"/>
      </eAnnotations>
      <eParameters name="target" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="resize">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) getCRootElement().getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ResizeShapeContext rc = new org.eclipse.graphiti.features.context.impl.ResizeShapeContext((org.eclipse.graphiti.mm.pictograms.Shape) getPictogramElement());&#xA;rc.setSize(width, height);&#xA;rc.setX(getX());&#xA;rc.setY(getY());&#xA;final grafikeditor.graphiti.features.resize.ResizeEndFeature rf = (grafikeditor.graphiti.features.resize.ResizeEndFeature) provider.getResizeShapeFeature((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc);&#xA;if (rf != null &amp;&amp; rf.canResizeShape((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;rf.resizeShape((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc);&#xA;&#x9;}&#xA;&#x9;});&#xA;}"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates an clone (persisting the modelElement's id) of this modelElement"/>
      </eAnnotations>
      <eParameters name="width">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="height">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CTerminal">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="checkOutgoingTerminalLabeledTransition0 checkIncomingTerminalLabeledTransitionTransition0"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
      <details key="checkIncomingTerminalLabeledTransitionTransition0" value="self.incoming->select(elem: elem.oclIsTypeOf())->size()>=1"/>
      <details key="checkOutgoingTerminalLabeledTransition0" value="self.outgoingElements->select(elem: elem.oclIsTypeOf())->size()>=1"/>
    </eAnnotations>
    <eSuperTypes href="http://cinco.scce.info/graphicalgraphmodel#//CNode"/>
    <eOperations name="update">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.dt.IDiagramTypeProvider dtp = org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createDiagramTypeProvider(&quot;grafikeditor.MeinEditorDiagramTypeProvider&quot;);&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider fp = (grafikeditor.graphiti.MeinEditorFeatureProvider) dtp.getFeatureProvider();&#xA;&#xA;org.eclipse.graphiti.features.context.impl.UpdateContext uc = new org.eclipse.graphiti.features.context.impl.UpdateContext(getPictogramElement());&#xA;org.eclipse.graphiti.features.IUpdateFeature uf = fp.getUpdateFeature(uc);&#xA;if (uf.canUpdate(uc))&#xA;&#x9;uf.update(uc);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return ((grafikeditor.meineditor.Terminal) this.getModelElement()).getName();"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Get the value of attribute name&#xA;&#xA;@return Value of name"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="setName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(modelElement.eResource().getResourceSet());&#xA;if (dom == null)&#xA;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(modelElement.eResource().getResourceSet());&#xA;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;&#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.Terminal) modelElement).setName(arg);&#xA;&#x9;&#x9;update();&#xA;&#x9;}&#xA;});&#xA;      "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Set the value of attribute name&#xA;&#xA;@param arg New value for name"/>
      </eAnnotations>
      <eParameters name="arg">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eParameters>
    </eOperations>
    <eOperations name="getStartPredecessors" upperBound="-1" eType="//CStart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CStart.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getGatewayPredecessors" upperBound="-1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CGateway.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getTerminalPredecessors" upperBound="-1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CTerminal.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getVariablePredecessors" upperBound="-1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CVariable.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getEndSuccessors" upperBound="-1" eType="//CEnd">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CEnd.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getTerminalSuccessors" upperBound="-1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CTerminal.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getVariableSuccessors" upperBound="-1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CVariable.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getGatewaySuccessors" upperBound="-1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CGateway.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCRootElement" eType="//CMeinEditor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return (CMeinEditor)super.getCRootElement();"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="delete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final grafikeditor.graphiti.features.delete.DeleteTerminalFeature df = (grafikeditor.graphiti.features.delete.DeleteTerminalFeature) provider.getDeleteFeature(dc);&#xA;&#xA;if (this.getContainer().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getContainer().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if ( this.getCRootElement().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getCRootElement().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if (df.canDelete(dc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;df.delete(dc);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;&#x9;return true;&#xA;}&#xA;return false;&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Deletes this modelElement.&#xA;&#xA;@return true, if the modelElement was successfully removed, false otherwise"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="canDelete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final org.eclipse.graphiti.features.IDeleteFeature df = provider.getDeleteFeature(dc);&#xA;return df.canDelete(dc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="highlight">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;org.eclipse.graphiti.platform.IDiagramBehavior idb = grafikeditor.graphiti.MeinEditorGraphitiUtils.getInstance().getDTP().getDiagramBehavior();&#xA;if (idb instanceof org.eclipse.graphiti.ui.editor.DiagramBehavior) {&#xA;&#x9;org.eclipse.graphiti.ui.editor.DiagramBehavior db = (org.eclipse.graphiti.ui.editor.DiagramBehavior) idb;&#xA;&#x9;db.setPictogramElementForSelection(getPictogramElement());&#xA;&#x9;db.selectBufferedPictogramElements();&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="moveTo">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;if (pes != null &amp;&amp; !pes.isEmpty()) {&#xA;final org.eclipse.graphiti.features.context.impl.MoveShapeContext mc = new org.eclipse.graphiti.features.context.impl.MoveShapeContext((org.eclipse.graphiti.mm.pictograms.Shape)pes.get(0));&#xA;&#x9;mc.setLocation(x, y);&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CGraphModel)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CGraphModel) this.getContainer()).getPictogramElement());&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CContainer)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CContainer) this.getContainer()).getPictogramElement());&#xA;&#x9;mc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) container.getPictogramElement());&#xA;&#xA;&#x9;final grafikeditor.graphiti.features.move.MoveTerminalFeature mf = (grafikeditor.graphiti.features.move.MoveTerminalFeature) provider.getMoveShapeFeature(mc);&#xA;&#xA;&#x9;if (mf.canMoveShape(mc, true)) {&#xA;&#x9;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(container.getModelElement().eResource().getResourceSet());&#xA;&#x9;      &#x9;if (dom == null)&#xA;&#x9;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(container.getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;mf.moveShape(mc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;} else {&#xA;&#x9;&#x9;if (mf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + container.getModelElement() +&quot;' exceeded. Can not move Terminal in the specified container&quot;);&#xA;&#x9;}&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Moves this node to the specified container. The node is placed at (x,y). ATTENTION: Each container element has an own coordinate system!&#xA;@param container The target container&#xA;@param x The new x position&#xA;@param y The new y position&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes in the target container is reached"/>
      </eAnnotations>
      <eParameters name="container" eType="//CMeinEditor"/>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="canMoveTo">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;if (pes != null &amp;&amp; !pes.isEmpty()) {&#xA;&#x9;final org.eclipse.graphiti.features.context.impl.MoveShapeContext mc = new org.eclipse.graphiti.features.context.impl.MoveShapeContext((org.eclipse.graphiti.mm.pictograms.Shape)pes.get(0));&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CGraphModel)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CGraphModel) this.getContainer()).getPictogramElement());&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CContainer)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CContainer) this.getContainer()).getPictogramElement());&#xA;&#x9;mc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) container.getPictogramElement());&#xA;&#x9;final grafikeditor.graphiti.features.move.MoveTerminalFeature mf = (grafikeditor.graphiti.features.move.MoveTerminalFeature) provider.getMoveShapeFeature(mc);&#xA;&#xA;&#x9;return mf.canMoveShape(mc);&#xA;}&#xA;return false;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="container" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CTerminal clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCTerminal();&#xA;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.flatCopy(getPictogramElement());&#xA;clone.setPictogramElement(copy);&#xA;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) target.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;    &#xA;final org.eclipse.graphiti.features.context.impl.AddContext ac = new org.eclipse.graphiti.features.context.impl.AddContext();&#xA;ac.setNewObject(clone.getModelElement());&#xA;ac.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) target.getPictogramElement());&#xA;&#xA;grafikeditor.graphiti.features.create.nodes.CreateTerminalFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateTerminalFeature(provider);&#xA;org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer(target.getPictogramElement());&#xA;&#xA;final grafikeditor.graphiti.features.add.AddTerminalFeature af = (grafikeditor.graphiti.features.add.AddTerminalFeature) provider.getAddFeature(ac);&#xA;&#xA;return cf.canCreate(cc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="clone" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CTerminal clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCTerminal();&#xA;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.flatCopy(getPictogramElement());&#xA;clone.setPictogramElement(copy);&#xA;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) target.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;    &#xA;final org.eclipse.graphiti.features.context.impl.AddContext ac = new org.eclipse.graphiti.features.context.impl.AddContext();&#xA;ac.setNewObject(clone.getModelElement());&#xA;ac.setLocation(clone.getX(), clone.getY());&#xA;ac.setWidth(clone.getWidth());&#xA;ac.setHeight(clone.getHeight());&#xA;ac.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) target.getPictogramElement());&#xA;&#xA;grafikeditor.graphiti.features.create.nodes.CreateTerminalFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateTerminalFeature(provider);&#xA;org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer(target.getPictogramElement());&#xA;&#xA;final grafikeditor.graphiti.features.add.AddTerminalFeature af = (grafikeditor.graphiti.features.add.AddTerminalFeature) provider.getAddFeature(ac);&#xA;if (af != null &amp;&amp; af.canAdd(ac) &amp;&amp; cf.canCreate(cc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(ac));&#xA;&#x9;&#x9;clone.setContainer(target);&#xA;&#x9;&#x9;target.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;target.getCRootElement().getModelElement().getModelElements().add(clone.getModelElement());&#xA;&#x9;&#x9;target.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;}  else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. Can not create '&quot; + this.getModelElement()+&quot;'' in the specified container&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates an clone (persisting the modelElement's id) of this modelElement"/>
      </eAnnotations>
      <eParameters name="target" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="resize">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) getCRootElement().getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ResizeShapeContext rc = new org.eclipse.graphiti.features.context.impl.ResizeShapeContext((org.eclipse.graphiti.mm.pictograms.Shape) getPictogramElement());&#xA;rc.setSize(width, height);&#xA;rc.setX(getX());&#xA;rc.setY(getY());&#xA;final grafikeditor.graphiti.features.resize.ResizeTerminalFeature rf = (grafikeditor.graphiti.features.resize.ResizeTerminalFeature) provider.getResizeShapeFeature((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc);&#xA;if (rf != null &amp;&amp; rf.canResizeShape((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;rf.resizeShape((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc);&#xA;&#x9;}&#xA;&#x9;});&#xA;}"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates an clone (persisting the modelElement's id) of this modelElement"/>
      </eAnnotations>
      <eParameters name="width">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="height">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CVariable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="checkOutgoingVariableLabeledTransition0 checkIncomingVariableLabeledTransitionTransition0"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
      <details key="checkIncomingVariableLabeledTransitionTransition0" value="self.incoming->select(elem: elem.oclIsTypeOf())->size()>=1"/>
      <details key="checkOutgoingVariableLabeledTransition0" value="self.outgoingElements->select(elem: elem.oclIsTypeOf())->size()>=1"/>
    </eAnnotations>
    <eSuperTypes href="http://cinco.scce.info/graphicalgraphmodel#//CNode"/>
    <eOperations name="update">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.dt.IDiagramTypeProvider dtp = org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createDiagramTypeProvider(&quot;grafikeditor.MeinEditorDiagramTypeProvider&quot;);&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider fp = (grafikeditor.graphiti.MeinEditorFeatureProvider) dtp.getFeatureProvider();&#xA;&#xA;org.eclipse.graphiti.features.context.impl.UpdateContext uc = new org.eclipse.graphiti.features.context.impl.UpdateContext(getPictogramElement());&#xA;org.eclipse.graphiti.features.IUpdateFeature uf = fp.getUpdateFeature(uc);&#xA;if (uf.canUpdate(uc))&#xA;&#x9;uf.update(uc);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return ((grafikeditor.meineditor.Variable) this.getModelElement()).getName();"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Get the value of attribute name&#xA;&#xA;@return Value of name"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="setName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(modelElement.eResource().getResourceSet());&#xA;if (dom == null)&#xA;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(modelElement.eResource().getResourceSet());&#xA;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;&#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.Variable) modelElement).setName(arg);&#xA;&#x9;&#x9;update();&#xA;&#x9;}&#xA;});&#xA;      "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Set the value of attribute name&#xA;&#xA;@param arg New value for name"/>
      </eAnnotations>
      <eParameters name="arg">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eParameters>
    </eOperations>
    <eOperations name="getStartPredecessors" upperBound="-1" eType="//CStart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CStart.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getGatewayPredecessors" upperBound="-1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CGateway.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getTerminalPredecessors" upperBound="-1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CTerminal.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getVariablePredecessors" upperBound="-1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CVariable.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getEndSuccessors" upperBound="-1" eType="//CEnd">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CEnd.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getTerminalSuccessors" upperBound="-1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CTerminal.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getVariableSuccessors" upperBound="-1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CVariable.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getGatewaySuccessors" upperBound="-1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CGateway.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCRootElement" eType="//CMeinEditor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return (CMeinEditor)super.getCRootElement();"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="delete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final grafikeditor.graphiti.features.delete.DeleteVariableFeature df = (grafikeditor.graphiti.features.delete.DeleteVariableFeature) provider.getDeleteFeature(dc);&#xA;&#xA;if (this.getContainer().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getContainer().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if ( this.getCRootElement().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getCRootElement().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if (df.canDelete(dc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;df.delete(dc);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;&#x9;return true;&#xA;}&#xA;return false;&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Deletes this modelElement.&#xA;&#xA;@return true, if the modelElement was successfully removed, false otherwise"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="canDelete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final org.eclipse.graphiti.features.IDeleteFeature df = provider.getDeleteFeature(dc);&#xA;return df.canDelete(dc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="highlight">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;org.eclipse.graphiti.platform.IDiagramBehavior idb = grafikeditor.graphiti.MeinEditorGraphitiUtils.getInstance().getDTP().getDiagramBehavior();&#xA;if (idb instanceof org.eclipse.graphiti.ui.editor.DiagramBehavior) {&#xA;&#x9;org.eclipse.graphiti.ui.editor.DiagramBehavior db = (org.eclipse.graphiti.ui.editor.DiagramBehavior) idb;&#xA;&#x9;db.setPictogramElementForSelection(getPictogramElement());&#xA;&#x9;db.selectBufferedPictogramElements();&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="moveTo">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;if (pes != null &amp;&amp; !pes.isEmpty()) {&#xA;final org.eclipse.graphiti.features.context.impl.MoveShapeContext mc = new org.eclipse.graphiti.features.context.impl.MoveShapeContext((org.eclipse.graphiti.mm.pictograms.Shape)pes.get(0));&#xA;&#x9;mc.setLocation(x, y);&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CGraphModel)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CGraphModel) this.getContainer()).getPictogramElement());&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CContainer)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CContainer) this.getContainer()).getPictogramElement());&#xA;&#x9;mc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) container.getPictogramElement());&#xA;&#xA;&#x9;final grafikeditor.graphiti.features.move.MoveVariableFeature mf = (grafikeditor.graphiti.features.move.MoveVariableFeature) provider.getMoveShapeFeature(mc);&#xA;&#xA;&#x9;if (mf.canMoveShape(mc, true)) {&#xA;&#x9;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(container.getModelElement().eResource().getResourceSet());&#xA;&#x9;      &#x9;if (dom == null)&#xA;&#x9;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(container.getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;mf.moveShape(mc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;} else {&#xA;&#x9;&#x9;if (mf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + container.getModelElement() +&quot;' exceeded. Can not move Variable in the specified container&quot;);&#xA;&#x9;}&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Moves this node to the specified container. The node is placed at (x,y). ATTENTION: Each container element has an own coordinate system!&#xA;@param container The target container&#xA;@param x The new x position&#xA;@param y The new y position&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes in the target container is reached"/>
      </eAnnotations>
      <eParameters name="container" eType="//CMeinEditor"/>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="canMoveTo">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;if (pes != null &amp;&amp; !pes.isEmpty()) {&#xA;&#x9;final org.eclipse.graphiti.features.context.impl.MoveShapeContext mc = new org.eclipse.graphiti.features.context.impl.MoveShapeContext((org.eclipse.graphiti.mm.pictograms.Shape)pes.get(0));&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CGraphModel)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CGraphModel) this.getContainer()).getPictogramElement());&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CContainer)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CContainer) this.getContainer()).getPictogramElement());&#xA;&#x9;mc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) container.getPictogramElement());&#xA;&#x9;final grafikeditor.graphiti.features.move.MoveVariableFeature mf = (grafikeditor.graphiti.features.move.MoveVariableFeature) provider.getMoveShapeFeature(mc);&#xA;&#xA;&#x9;return mf.canMoveShape(mc);&#xA;}&#xA;return false;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="container" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CVariable clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCVariable();&#xA;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.flatCopy(getPictogramElement());&#xA;clone.setPictogramElement(copy);&#xA;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) target.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;    &#xA;final org.eclipse.graphiti.features.context.impl.AddContext ac = new org.eclipse.graphiti.features.context.impl.AddContext();&#xA;ac.setNewObject(clone.getModelElement());&#xA;ac.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) target.getPictogramElement());&#xA;&#xA;grafikeditor.graphiti.features.create.nodes.CreateVariableFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateVariableFeature(provider);&#xA;org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer(target.getPictogramElement());&#xA;&#xA;final grafikeditor.graphiti.features.add.AddVariableFeature af = (grafikeditor.graphiti.features.add.AddVariableFeature) provider.getAddFeature(ac);&#xA;&#xA;return cf.canCreate(cc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="clone" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CVariable clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCVariable();&#xA;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.flatCopy(getPictogramElement());&#xA;clone.setPictogramElement(copy);&#xA;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) target.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;    &#xA;final org.eclipse.graphiti.features.context.impl.AddContext ac = new org.eclipse.graphiti.features.context.impl.AddContext();&#xA;ac.setNewObject(clone.getModelElement());&#xA;ac.setLocation(clone.getX(), clone.getY());&#xA;ac.setWidth(clone.getWidth());&#xA;ac.setHeight(clone.getHeight());&#xA;ac.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) target.getPictogramElement());&#xA;&#xA;grafikeditor.graphiti.features.create.nodes.CreateVariableFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateVariableFeature(provider);&#xA;org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer(target.getPictogramElement());&#xA;&#xA;final grafikeditor.graphiti.features.add.AddVariableFeature af = (grafikeditor.graphiti.features.add.AddVariableFeature) provider.getAddFeature(ac);&#xA;if (af != null &amp;&amp; af.canAdd(ac) &amp;&amp; cf.canCreate(cc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(ac));&#xA;&#x9;&#x9;clone.setContainer(target);&#xA;&#x9;&#x9;target.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;target.getCRootElement().getModelElement().getModelElements().add(clone.getModelElement());&#xA;&#x9;&#x9;target.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;}  else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. Can not create '&quot; + this.getModelElement()+&quot;'' in the specified container&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates an clone (persisting the modelElement's id) of this modelElement"/>
      </eAnnotations>
      <eParameters name="target" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="resize">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) getCRootElement().getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ResizeShapeContext rc = new org.eclipse.graphiti.features.context.impl.ResizeShapeContext((org.eclipse.graphiti.mm.pictograms.Shape) getPictogramElement());&#xA;rc.setSize(width, height);&#xA;rc.setX(getX());&#xA;rc.setY(getY());&#xA;final grafikeditor.graphiti.features.resize.ResizeVariableFeature rf = (grafikeditor.graphiti.features.resize.ResizeVariableFeature) provider.getResizeShapeFeature((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc);&#xA;if (rf != null &amp;&amp; rf.canResizeShape((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;rf.resizeShape((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc);&#xA;&#x9;}&#xA;&#x9;});&#xA;}"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates an clone (persisting the modelElement's id) of this modelElement"/>
      </eAnnotations>
      <eParameters name="width">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="height">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CGateway">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="checkOutgoingGatewayLabeledTransition0 checkIncomingGatewayLabeledTransitionTransition0"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
      <details key="checkIncomingGatewayLabeledTransitionTransition0" value="self.incoming->select(elem: elem.oclIsTypeOf())->size()>=1"/>
      <details key="checkOutgoingGatewayLabeledTransition0" value="self.outgoingElements->select(elem: elem.oclIsTypeOf())->size()>=1"/>
    </eAnnotations>
    <eSuperTypes href="http://cinco.scce.info/graphicalgraphmodel#//CNode"/>
    <eOperations name="update">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.dt.IDiagramTypeProvider dtp = org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createDiagramTypeProvider(&quot;grafikeditor.MeinEditorDiagramTypeProvider&quot;);&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider fp = (grafikeditor.graphiti.MeinEditorFeatureProvider) dtp.getFeatureProvider();&#xA;&#xA;org.eclipse.graphiti.features.context.impl.UpdateContext uc = new org.eclipse.graphiti.features.context.impl.UpdateContext(getPictogramElement());&#xA;org.eclipse.graphiti.features.IUpdateFeature uf = fp.getUpdateFeature(uc);&#xA;if (uf.canUpdate(uc))&#xA;&#x9;uf.update(uc);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return ((grafikeditor.meineditor.Gateway) this.getModelElement()).getName();"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Get the value of attribute name&#xA;&#xA;@return Value of name"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="setName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(modelElement.eResource().getResourceSet());&#xA;if (dom == null)&#xA;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(modelElement.eResource().getResourceSet());&#xA;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;&#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.Gateway) modelElement).setName(arg);&#xA;&#x9;&#x9;update();&#xA;&#x9;}&#xA;});&#xA;      "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Set the value of attribute name&#xA;&#xA;@param arg New value for name"/>
      </eAnnotations>
      <eParameters name="arg">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eParameters>
    </eOperations>
    <eOperations name="getStartPredecessors" upperBound="-1" eType="//CStart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CStart.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getGatewayPredecessors" upperBound="-1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CGateway.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getTerminalPredecessors" upperBound="-1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CTerminal.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getVariablePredecessors" upperBound="-1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getPredecessors(CVariable.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getEndSuccessors" upperBound="-1" eType="//CEnd">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CEnd.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getTerminalSuccessors" upperBound="-1" eType="//CTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CTerminal.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getVariableSuccessors" upperBound="-1" eType="//CVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CVariable.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getGatewaySuccessors" upperBound="-1" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xA;&#xA;return getSuccessors(CGateway.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getCRootElement" eType="//CMeinEditor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return (CMeinEditor)super.getCRootElement();"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="delete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final grafikeditor.graphiti.features.delete.DeleteGatewayFeature df = (grafikeditor.graphiti.features.delete.DeleteGatewayFeature) provider.getDeleteFeature(dc);&#xA;&#xA;if (this.getContainer().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getContainer().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if ( this.getCRootElement().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getCRootElement().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if (df.canDelete(dc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;df.delete(dc);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;&#x9;return true;&#xA;}&#xA;return false;&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Deletes this modelElement.&#xA;&#xA;@return true, if the modelElement was successfully removed, false otherwise"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="canDelete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final org.eclipse.graphiti.features.IDeleteFeature df = provider.getDeleteFeature(dc);&#xA;return df.canDelete(dc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="highlight">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;org.eclipse.graphiti.platform.IDiagramBehavior idb = grafikeditor.graphiti.MeinEditorGraphitiUtils.getInstance().getDTP().getDiagramBehavior();&#xA;if (idb instanceof org.eclipse.graphiti.ui.editor.DiagramBehavior) {&#xA;&#x9;org.eclipse.graphiti.ui.editor.DiagramBehavior db = (org.eclipse.graphiti.ui.editor.DiagramBehavior) idb;&#xA;&#x9;db.setPictogramElementForSelection(getPictogramElement());&#xA;&#x9;db.selectBufferedPictogramElements();&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="moveTo">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;if (pes != null &amp;&amp; !pes.isEmpty()) {&#xA;final org.eclipse.graphiti.features.context.impl.MoveShapeContext mc = new org.eclipse.graphiti.features.context.impl.MoveShapeContext((org.eclipse.graphiti.mm.pictograms.Shape)pes.get(0));&#xA;&#x9;mc.setLocation(x, y);&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CGraphModel)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CGraphModel) this.getContainer()).getPictogramElement());&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CContainer)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CContainer) this.getContainer()).getPictogramElement());&#xA;&#x9;mc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) container.getPictogramElement());&#xA;&#xA;&#x9;final grafikeditor.graphiti.features.move.MoveGatewayFeature mf = (grafikeditor.graphiti.features.move.MoveGatewayFeature) provider.getMoveShapeFeature(mc);&#xA;&#xA;&#x9;if (mf.canMoveShape(mc, true)) {&#xA;&#x9;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(container.getModelElement().eResource().getResourceSet());&#xA;&#x9;      &#x9;if (dom == null)&#xA;&#x9;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(container.getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;mf.moveShape(mc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;} else {&#xA;&#x9;&#x9;if (mf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + container.getModelElement() +&quot;' exceeded. Can not move Gateway in the specified container&quot;);&#xA;&#x9;}&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Moves this node to the specified container. The node is placed at (x,y). ATTENTION: Each container element has an own coordinate system!&#xA;@param container The target container&#xA;@param x The new x position&#xA;@param y The new y position&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException if the maximum number of contained nodes in the target container is reached"/>
      </eAnnotations>
      <eParameters name="container" eType="//CMeinEditor"/>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="canMoveTo">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;if (pes != null &amp;&amp; !pes.isEmpty()) {&#xA;&#x9;final org.eclipse.graphiti.features.context.impl.MoveShapeContext mc = new org.eclipse.graphiti.features.context.impl.MoveShapeContext((org.eclipse.graphiti.mm.pictograms.Shape)pes.get(0));&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CGraphModel)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CGraphModel) this.getContainer()).getPictogramElement());&#xA;&#x9;if (this.getContainer() instanceof graphicalgraphmodel.CContainer)&#xA;&#x9;&#x9;mc.setSourceContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) ((graphicalgraphmodel.CContainer) this.getContainer()).getPictogramElement());&#xA;&#x9;mc.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) container.getPictogramElement());&#xA;&#x9;final grafikeditor.graphiti.features.move.MoveGatewayFeature mf = (grafikeditor.graphiti.features.move.MoveGatewayFeature) provider.getMoveShapeFeature(mc);&#xA;&#xA;&#x9;return mf.canMoveShape(mc);&#xA;}&#xA;return false;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="container" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CGateway clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCGateway();&#xA;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.flatCopy(getPictogramElement());&#xA;clone.setPictogramElement(copy);&#xA;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) target.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;    &#xA;final org.eclipse.graphiti.features.context.impl.AddContext ac = new org.eclipse.graphiti.features.context.impl.AddContext();&#xA;ac.setNewObject(clone.getModelElement());&#xA;ac.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) target.getPictogramElement());&#xA;&#xA;grafikeditor.graphiti.features.create.nodes.CreateGatewayFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateGatewayFeature(provider);&#xA;org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer(target.getPictogramElement());&#xA;&#xA;final grafikeditor.graphiti.features.add.AddGatewayFeature af = (grafikeditor.graphiti.features.add.AddGatewayFeature) provider.getAddFeature(ac);&#xA;&#xA;return cf.canCreate(cc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="clone" eType="//CGateway">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CGateway clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCGateway();&#xA;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.flatCopy(getPictogramElement());&#xA;clone.setPictogramElement(copy);&#xA;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) target.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;    &#xA;final org.eclipse.graphiti.features.context.impl.AddContext ac = new org.eclipse.graphiti.features.context.impl.AddContext();&#xA;ac.setNewObject(clone.getModelElement());&#xA;ac.setLocation(clone.getX(), clone.getY());&#xA;ac.setWidth(clone.getWidth());&#xA;ac.setHeight(clone.getHeight());&#xA;ac.setTargetContainer((org.eclipse.graphiti.mm.pictograms.ContainerShape) target.getPictogramElement());&#xA;&#xA;grafikeditor.graphiti.features.create.nodes.CreateGatewayFeature cf = new grafikeditor.graphiti.features.create.nodes.CreateGatewayFeature(provider);&#xA;org.eclipse.graphiti.features.context.impl.CreateContext cc = new org.eclipse.graphiti.features.context.impl.CreateContext();&#xA;cc.setTargetContainer(target.getPictogramElement());&#xA;&#xA;final grafikeditor.graphiti.features.add.AddGatewayFeature af = (grafikeditor.graphiti.features.add.AddGatewayFeature) provider.getAddFeature(ac);&#xA;if (af != null &amp;&amp; af.canAdd(ac) &amp;&amp; cf.canCreate(cc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(ac));&#xA;&#x9;&#x9;clone.setContainer(target);&#xA;&#x9;&#x9;target.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;target.getCRootElement().getModelElement().getModelElements().add(clone.getModelElement());&#xA;&#x9;&#x9;target.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;}  else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_CARDINALITY))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. Can not create '&quot; + this.getModelElement()+&quot;'' in the specified container&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates an clone (persisting the modelElement's id) of this modelElement"/>
      </eAnnotations>
      <eParameters name="target" eType="//CMeinEditor"/>
    </eOperations>
    <eOperations name="resize">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) getCRootElement().getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ResizeShapeContext rc = new org.eclipse.graphiti.features.context.impl.ResizeShapeContext((org.eclipse.graphiti.mm.pictograms.Shape) getPictogramElement());&#xA;rc.setSize(width, height);&#xA;rc.setX(getX());&#xA;rc.setY(getY());&#xA;final grafikeditor.graphiti.features.resize.ResizeGatewayFeature rf = (grafikeditor.graphiti.features.resize.ResizeGatewayFeature) provider.getResizeShapeFeature((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc);&#xA;if (rf != null &amp;&amp; rf.canResizeShape((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;rf.resizeShape((org.eclipse.graphiti.features.context.impl.ResizeShapeContext) rc);&#xA;&#x9;}&#xA;&#x9;});&#xA;}"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates an clone (persisting the modelElement's id) of this modelElement"/>
      </eAnnotations>
      <eParameters name="width">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="height">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="newCLabeledTransition" lowerBound="1" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition retval = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;if (cf.canCreate(ccc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;org.eclipse.graphiti.mm.pictograms.Connection conn = cf.create(ccc);&#xA;&#x9;&#x9;&#x9;retval.setPictogramElement(conn);&#xA;&#x9;&#x9;&#x9;retval.setModelElement((graphmodel.Edge) conn.getLink().getBusinessObjects().get(0));&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;&#x9;retval.setSourceElement(this);&#xA;&#x9;retval.setTargetElement(target);&#xA;&#x9;this.getContainer().getModelElements().add(retval);&#xA;&#x9;this.getCRootElement().getMap().put(retval.getModelElement() ,retval);&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;&#xA;}&#xA;return retval;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a new CLabeledTransition and connects the current node to the specified target&#xA;@param target The target node of the edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The new CLabeledTransition"/>
      </eAnnotations>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="canNewCLabeledTransition" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;final grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = &#xA;&#x9;new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;&#xA;ccc.setSourceAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) this.getPictogramElement()).getAnchors().get(0));&#xA;ccc.setTargetAnchor(((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0));&#xA;&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CTransition">
    <eSuperTypes href="http://cinco.scce.info/graphicalgraphmodel#//CEdge"/>
    <eOperations name="update">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.dt.IDiagramTypeProvider dtp = org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createDiagramTypeProvider(&quot;grafikeditor.MeinEditorDiagramTypeProvider&quot;);&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider fp = (grafikeditor.graphiti.MeinEditorFeatureProvider) dtp.getFeatureProvider();&#xA;&#xA;org.eclipse.graphiti.features.context.impl.UpdateContext uc = new org.eclipse.graphiti.features.context.impl.UpdateContext(getPictogramElement());&#xA;org.eclipse.graphiti.features.IUpdateFeature uf = fp.getUpdateFeature(uc);&#xA;if (uf.canUpdate(uc))&#xA;&#x9;uf.update(uc);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="canReconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="reconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setTargetElement(target);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' target from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's target.&#xA;@param node The new target node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached"/>
      </eAnnotations>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="canReconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="reconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setTargetElement(target);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' target from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's target.&#xA;@param node The new target node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached"/>
      </eAnnotations>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canReconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="reconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setTargetElement(target);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' target from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's target.&#xA;@param node The new target node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached"/>
      </eAnnotations>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canReconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="reconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setTargetElement(target);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' target from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's target.&#xA;@param node The new target node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached"/>
      </eAnnotations>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="addBendpoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.algorithms.styles.Point p = org.eclipse.graphiti.services.Graphiti.getGaService().createPoint(x,y);&#xA;((org.eclipse.graphiti.mm.pictograms.FreeFormConnection) getPictogramElement()).getBendpoints().add(p);&#xA;&#xA;"/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="delete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final grafikeditor.graphiti.features.delete.DeleteTransitionFeature df = (grafikeditor.graphiti.features.delete.DeleteTransitionFeature) provider.getDeleteFeature(dc);&#xA;&#xA;if (this.getContainer().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getContainer().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if ( this.getCRootElement().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getCRootElement().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if (df.canDelete(dc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;df.delete(dc);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;&#x9;return true;&#xA;}&#xA;return false;&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Deletes this modelElement.&#xA;&#xA;@return true, if the modelElement was successfully removed, false otherwise"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="canDelete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final org.eclipse.graphiti.features.IDeleteFeature df = provider.getDeleteFeature(dc);&#xA;return df.canDelete(dc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="highlight">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;org.eclipse.graphiti.platform.IDiagramBehavior idb = grafikeditor.graphiti.MeinEditorGraphitiUtils.getInstance().getDTP().getDiagramBehavior();&#xA;if (idb instanceof org.eclipse.graphiti.ui.editor.DiagramBehavior) {&#xA;&#x9;org.eclipse.graphiti.ui.editor.DiagramBehavior db = (org.eclipse.graphiti.ui.editor.DiagramBehavior) idb;&#xA;&#x9;db.setPictogramElementForSelection(getPictogramElement());&#xA;&#x9;db.selectBufferedPictogramElements();&#xA;}"/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CLabeledTransition">
    <eSuperTypes href="http://cinco.scce.info/graphicalgraphmodel#//CEdge"/>
    <eOperations name="update">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.dt.IDiagramTypeProvider dtp = org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createDiagramTypeProvider(&quot;grafikeditor.MeinEditorDiagramTypeProvider&quot;);&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider fp = (grafikeditor.graphiti.MeinEditorFeatureProvider) dtp.getFeatureProvider();&#xA;&#xA;org.eclipse.graphiti.features.context.impl.UpdateContext uc = new org.eclipse.graphiti.features.context.impl.UpdateContext(getPictogramElement());&#xA;org.eclipse.graphiti.features.IUpdateFeature uf = fp.getUpdateFeature(uc);&#xA;if (uf.canUpdate(uc))&#xA;&#x9;uf.update(uc);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getLabel">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return ((grafikeditor.meineditor.LabeledTransition) this.getModelElement()).getLabel();"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Get the value of attribute label&#xA;&#xA;@return Value of label"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="setLabel">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(modelElement.eResource().getResourceSet());&#xA;if (dom == null)&#xA;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(modelElement.eResource().getResourceSet());&#xA;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;&#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) modelElement).setLabel(arg);&#xA;&#x9;&#x9;update();&#xA;&#x9;}&#xA;});&#xA;      "/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Set the value of attribute label&#xA;&#xA;@param arg New value for label"/>
      </eAnnotations>
      <eParameters name="arg">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eParameters>
    </eOperations>
    <eOperations name="canReconnectSource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor =((org.eclipse.graphiti.mm.pictograms.Shape) source.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_SOURCE);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CStart"/>
    </eOperations>
    <eOperations name="reconnectSource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor =((org.eclipse.graphiti.mm.pictograms.Shape) source.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_SOURCE);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setSourceElement(source);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + source.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' source from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+source.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's source.&#xA;@param node The new source node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for the source node is reached"/>
      </eAnnotations>
      <eParameters name="source" eType="//CStart"/>
    </eOperations>
    <eOperations name="canReconnectSource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor =((org.eclipse.graphiti.mm.pictograms.Shape) source.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_SOURCE);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CGateway"/>
    </eOperations>
    <eOperations name="reconnectSource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor =((org.eclipse.graphiti.mm.pictograms.Shape) source.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_SOURCE);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setSourceElement(source);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + source.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' source from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+source.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's source.&#xA;@param node The new source node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for the source node is reached"/>
      </eAnnotations>
      <eParameters name="source" eType="//CGateway"/>
    </eOperations>
    <eOperations name="canReconnectSource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor =((org.eclipse.graphiti.mm.pictograms.Shape) source.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_SOURCE);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="reconnectSource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor =((org.eclipse.graphiti.mm.pictograms.Shape) source.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_SOURCE);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setSourceElement(source);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + source.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' source from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+source.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's source.&#xA;@param node The new source node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for the source node is reached"/>
      </eAnnotations>
      <eParameters name="source" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canReconnectSource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor =((org.eclipse.graphiti.mm.pictograms.Shape) source.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_SOURCE);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CVariable"/>
    </eOperations>
    <eOperations name="reconnectSource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor =((org.eclipse.graphiti.mm.pictograms.Shape) source.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_SOURCE);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setSourceElement(source);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + source.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' source from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+source.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's source.&#xA;@param node The new source node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for the source node is reached"/>
      </eAnnotations>
      <eParameters name="source" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canReconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="reconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setTargetElement(target);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' target from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's target.&#xA;@param node The new target node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached"/>
      </eAnnotations>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="canReconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="reconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setTargetElement(target);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' target from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's target.&#xA;@param node The new target node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached"/>
      </eAnnotations>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canReconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="reconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setTargetElement(target);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' target from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's target.&#xA;@param node The new target node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached"/>
      </eAnnotations>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canReconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;return rf.canReconnect(rc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="reconnectTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Anchor oldAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor newAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) target.getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.datatypes.ILocation targetLocation = org.eclipse.graphiti.ui.services.GraphitiUi.getPeService().getLocationRelativeToDiagram(newAnchor);&#xA;&#xA;final org.eclipse.graphiti.features.context.impl.ReconnectionContext rc = new org.eclipse.graphiti.features.context.impl.ReconnectionContext((org.eclipse.graphiti.mm.pictograms.Connection) getPictogramElement(), oldAnchor, newAnchor, targetLocation);&#xA;rc.setReconnectType(org.eclipse.graphiti.features.context.impl.ReconnectionContext.RECONNECT_TARGET);&#xA;final grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature rf = (grafikeditor.graphiti.features.reconnect.ReconnectLabeledTransitionFeature)provider.getReconnectionFeature(rc);&#xA;&#xA;if (rf.canReconnect(rc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;&#x9;rf.reconnect(rc);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;this.setTargetElement(target);&#xA;} else {&#xA;&#x9;if (rf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + target.getModelElement()+&quot;' exceeded. \nCan not reconnect '&quot; + this.getModelElement()+&quot;'' target from \n'&quot; +getSourceElement().getModelElement()+&quot;' to \n'&quot;+target.getModelElement()+&quot;'&quot;);&#xA;}&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Reconnects the edge's target.&#xA;@param node The new target node of this edge.&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached"/>
      </eAnnotations>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CStart"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CStart"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CStart"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CStart"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CStart"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CStart"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CStart"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CStart"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CGateway"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CGateway"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CGateway"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CGateway"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CGateway"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CGateway"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CGateway"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CGateway"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CTerminal"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CTerminal"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CTerminal"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CTerminal"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CTerminal"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CTerminal"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CTerminal"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CTerminal"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CVariable"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CVariable"/>
      <eParameters name="target" eType="//CEnd"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CVariable"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CVariable"/>
      <eParameters name="target" eType="//CTerminal"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CVariable"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CVariable"/>
      <eParameters name="target" eType="//CVariable"/>
    </eOperations>
    <eOperations name="canClone">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;return cf.canCreate(ccc);"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eParameters name="source" eType="//CVariable"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="clone" eType="//CLabeledTransition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final CLabeledTransition clone = grafikeditor.api.cmeineditor.CmeineditorFactory.eINSTANCE.createCLabeledTransition();&#xA;java.util.ArrayList&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pe = new java.util.ArrayList&lt;>();&#xA;pe.add(this.getPictogramElement());&#xA;java.util.Set&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> set = de.jabc.cinco.meta.core.ui.utils.CincoCopyUtils.targetCopy(pe, getDiagram());&#xA;if (set != null &amp;&amp; !set.isEmpty()) {&#xA;&#x9;org.eclipse.graphiti.mm.pictograms.PictogramElement copy = set.iterator().next();&#xA;&#x9;clone.setModelElement((graphmodel.ModelElement) copy.getLink().getBusinessObjects().get(0));&#xA;&#x9;clone.setPictogramElement(copy);&#xA;}&#xA;clone.setSourceElement(source);&#xA;clone.setTargetElement(target);&#xA;final grafikeditor.api.cmeineditor.CMeinEditor container = (grafikeditor.api.cmeineditor.CMeinEditor)source.getCRootElement();&#xA;&#xA;org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) container.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#x9;  &#xA;org.eclipse.graphiti.mm.pictograms.Anchor sourceAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getSourceElement().getPictogramElement()).getAnchors().get(0);&#xA;org.eclipse.graphiti.mm.pictograms.Anchor targetAnchor = ((org.eclipse.graphiti.mm.pictograms.Shape) clone.getTargetElement().getPictogramElement()).getAnchors().get(0);&#xA;&#x9;  &#xA;final org.eclipse.graphiti.features.context.impl.AddConnectionContext acc = new org.eclipse.graphiti.features.context.impl.AddConnectionContext(sourceAnchor, targetAnchor);&#xA;acc.setNewObject(clone.getModelElement());&#xA;&#xA;grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature cf = &#xA;&#x9;new grafikeditor.graphiti.features.create.edges.CreateLabeledTransitionFeature(provider);&#xA;&#x9;  &#xA;org.eclipse.graphiti.features.context.impl.CreateConnectionContext ccc = new org.eclipse.graphiti.features.context.impl.CreateConnectionContext();&#xA;ccc.setSourceAnchor(sourceAnchor);&#xA;ccc.setTargetAnchor(targetAnchor);&#xA;&#xA;final grafikeditor.graphiti.features.add.AddLabeledTransitionFeature af = (grafikeditor.graphiti.features.add.AddLabeledTransitionFeature) provider.getAddFeature(acc);&#xA;if (af != null &amp;&amp; af.canAdd(acc) &amp;&amp; cf.canCreate(ccc)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(target.getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setSourceElement((graphmodel.Node) clone.getSourceElement().getModelElement());&#xA;&#x9;&#x9;((grafikeditor.meineditor.LabeledTransition) clone.getModelElement()).setTargetElement((graphmodel.Node) clone.getTargetElement().getModelElement());&#xA;&#x9;&#x9;clone.setPictogramElement(af.add(acc));&#xA;&#x9;&#x9;container.getModelElements().add(clone);&#xA;&#x9;&#x9;container.getCRootElement().getMap().put(clone.getModelElement(), clone);&#xA;&#x9;&#x9;container.getMap().put(clone.getModelElement(), clone);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;} else {&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_OUT))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Outgoing edge cardinality of '&quot; + clone.getSourceElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;&#x9;if (cf.getError().equals(de.jabc.cinco.meta.core.ge.style.model.errorhandling.ECincoError.MAX_IN))&#xA;&#x9;&#x9;&#x9;throw new de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoContainerCardinalityException(&quot;Incoming edge cardinality of '&quot; + clone.getTargetElement().getModelElement()+&quot;' exceeded. \nCan not create 'LabeledTransition' from \n'&quot; +clone.getSourceElement().getModelElement()+&quot;' to \n'&quot;+clone.getTargetElement().getModelElement()+&quot;'&quot;);&#xA;}&#xA;&#xA;return clone;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Creates a clone (persisting the modelElement's id) of this modelElement&#xA;@param source The source node of the cloned edge&#xA;@param target The target node of the cloned edge&#xA;&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityOutException if the maximum number of outgoing edges for this node is reached&#xA;@exception de.jabc.cinco.meta.core.ge.style.model.errorhandling.CincoEdgeCardinalityInException if the maximum number of incoming edges for the target node is reached&#xA;&#xA;@return The cloned edge"/>
      </eAnnotations>
      <eParameters name="source" eType="//CVariable"/>
      <eParameters name="target" eType="//CGateway"/>
    </eOperations>
    <eOperations name="addBendpoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.algorithms.styles.Point p = org.eclipse.graphiti.services.Graphiti.getGaService().createPoint(x,y);&#xA;((org.eclipse.graphiti.mm.pictograms.FreeFormConnection) getPictogramElement()).getBendpoints().add(p);&#xA;&#xA;"/>
      </eAnnotations>
      <eParameters name="x">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
      <eParameters name="y">
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eParameters>
    </eOperations>
    <eOperations name="delete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final grafikeditor.graphiti.features.delete.DeleteLabeledTransitionFeature df = (grafikeditor.graphiti.features.delete.DeleteLabeledTransitionFeature) provider.getDeleteFeature(dc);&#xA;&#xA;if (this.getContainer().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getContainer().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if ( this.getCRootElement().getMap().get(this.getModelElement()) != null) {&#xA;&#x9;this.getCRootElement().getMap().remove(this.getModelElement());&#xA;}&#xA;&#xA;if (df.canDelete(dc, true)) {&#xA;&#x9;org.eclipse.emf.transaction.TransactionalEditingDomain dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.getEditingDomain(getModelElement().eResource().getResourceSet());&#xA;      &#x9;if (dom == null)&#xA;&#x9;&#x9;dom = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain(getModelElement().eResource().getResourceSet());&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom) {&#xA;        &#xA;&#x9;@Override&#xA;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;df.delete(dc);&#xA;&#x9;}&#xA;&#x9;});&#xA;&#x9;&#xA;&#x9;return true;&#xA;}&#xA;return false;&#xA;"/>
        <details key="documentation" value="&lt;p>&lt;b>&lt;em>Cinco API&lt;/em>&lt;/b>&lt;/p>&#xA;Deletes this modelElement.&#xA;&#xA;@return true, if the modelElement was successfully removed, false otherwise"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="canDelete">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;&#xA;java.util.List&lt;org.eclipse.graphiti.mm.pictograms.PictogramElement> pes = org.eclipse.graphiti.ui.services.GraphitiUi.getLinkService().getPictogramElements(d, this.getModelElement());&#xA;    if (pes == null || pes.isEmpty())&#xA;    &#x9;return false;&#xA;final org.eclipse.graphiti.features.context.impl.DeleteContext dc = new org.eclipse.graphiti.features.context.impl.DeleteContext(pes.get(0));&#xA;final org.eclipse.graphiti.features.IDeleteFeature df = provider.getDeleteFeature(dc);&#xA;return df.canDelete(dc);&#xA;"/>
      </eAnnotations>
      <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="highlight">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.graphiti.mm.pictograms.Diagram d = (org.eclipse.graphiti.mm.pictograms.Diagram) this.getDiagram();&#xA;grafikeditor.graphiti.MeinEditorFeatureProvider provider = (grafikeditor.graphiti.MeinEditorFeatureProvider) org.eclipse.graphiti.ui.services.GraphitiUi.getExtensionManager().createFeatureProvider(d);&#xA;org.eclipse.graphiti.platform.IDiagramBehavior idb = grafikeditor.graphiti.MeinEditorGraphitiUtils.getInstance().getDTP().getDiagramBehavior();&#xA;if (idb instanceof org.eclipse.graphiti.ui.editor.DiagramBehavior) {&#xA;&#x9;org.eclipse.graphiti.ui.editor.DiagramBehavior db = (org.eclipse.graphiti.ui.editor.DiagramBehavior) idb;&#xA;&#x9;db.setPictogramElementForSelection(getPictogramElement());&#xA;&#x9;db.selectBufferedPictogramElements();&#xA;}"/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
</ecore:EPackage>
